<?xml version="1.0" encoding="UTF-8"?>
<project version="4">
  <component name="AutoImportSettings">
    <option name="autoReloadType" value="ALL" />
  </component>
  <component name="ChangeListManager">
    <list default="true" id="8b8bd45d-717e-41c3-9ad9-c155e131541e" name="更改" comment="">
      <change afterPath="$PROJECT_DIR$/cache/errs/error.go" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/cache/local_cache.go" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/cache/max_cnt_cache.go" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/cache/redis_cache.go" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/cache/redis_cache_test.go" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/cache/type.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/container/errs/error.go" beforeDir="false" afterPath="$PROJECT_DIR$/container/errs/error.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/go.mod" beforeDir="false" afterPath="$PROJECT_DIR$/go.mod" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/go.sum" beforeDir="false" afterPath="$PROJECT_DIR$/go.sum" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/types.go" beforeDir="false" afterPath="$PROJECT_DIR$/types.go" afterDir="false" />
    </list>
    <option name="SHOW_DIALOG" value="false" />
    <option name="HIGHLIGHT_CONFLICTS" value="true" />
    <option name="HIGHLIGHT_NON_ACTIVE_CHANGELIST" value="false" />
    <option name="LAST_RESOLUTION" value="IGNORE" />
  </component>
  <component name="FileTemplateManagerImpl">
    <option name="RECENT_TEMPLATES">
      <list>
        <option value="Go Application" />
        <option value="Go File" />
      </list>
    </option>
  </component>
  <component name="GOROOT" url="file:///usr/local/go" />
  <component name="Git.Settings">
    <option name="RECENT_GIT_ROOT_PATH" value="$PROJECT_DIR$" />
  </component>
  <component name="HighlightingSettingsPerFile">
    <setting file="file:///usr/local/go/src/context/context.go" root0="SKIP_INSPECTION" />
    <setting file="file:///usr/local/go/src/runtime/timestub.go" root0="SKIP_INSPECTION" />
    <setting file="file:///usr/local/go/src/sync/mutex.go" root0="SKIP_INSPECTION" />
    <setting file="file:///usr/local/go/src/sync/rwmutex.go" root0="SKIP_INSPECTION" />
    <setting file="file:///usr/local/go/src/time/time.go" root0="SKIP_INSPECTION" />
  </component>
  <component name="KubernetesApiPersistence">
    <option name="context" value="docker-desktop" />
  </component>
  <component name="MarkdownSettingsMigration">
    <option name="stateVersion" value="1" />
  </component>
  <component name="ProjectId" id="2T9xUmIy0wnUoJIrnMWCL4CC56i" />
  <component name="ProjectLevelVcsManager">
    <ConfirmationsSetting value="2" id="Add" />
  </component>
  <component name="ProjectViewState">
    <option name="hideEmptyMiddlePackages" value="true" />
    <option name="showLibraryContents" value="true" />
  </component>
  <component name="PropertiesComponent"><![CDATA[{
  "keyToString": {
    "ASKED_SHARE_PROJECT_CONFIGURATION_FILES": "true",
    "DefaultGoTemplateProperty": "Go File",
    "RunOnceActivity.ShowReadmeOnStart": "true",
    "RunOnceActivity.go.formatter.settings.were.checked": "true",
    "RunOnceActivity.go.migrated.go.modules.settings": "true",
    "RunOnceActivity.go.modules.go.list.on.any.changes.was.set": "true",
    "WebServerToolWindowFactoryState": "false",
    "git-widget-placeholder": "main",
    "go.import.settings.migrated": "true",
    "go.sdk.automatically.set": "true",
    "last_opened_file_path": "/Users/xuhaidong/GolandProjects/go-generic-tools/container/queue",
    "node.js.detected.package.eslint": "true",
    "node.js.selected.package.eslint": "(autodetect)",
    "settings.editor.selected.configurable": "editor.preferences.completion"
  }
}]]></component>
  <component name="RecentsManager">
    <key name="CopyFile.RECENT_KEYS">
      <recent name="$PROJECT_DIR$/container/queue" />
    </key>
  </component>
  <component name="RunManager" selected="Go 测试.github.com/xuhaidong1/go-generic-tools/cache 中的 TestRedisCache_Set/timeout">
    <configuration name="github.com/xuhaidong1/go-generic-tools/cache 中的 TestRedisCache_Set/timeout" type="GoTestRunConfiguration" factoryName="Go Test" temporary="true" nameIsGenerated="true">
      <module name="go-generic-tools" />
      <working_directory value="$PROJECT_DIR$/cache" />
      <root_directory value="$PROJECT_DIR$" />
      <kind value="PACKAGE" />
      <package value="github.com/xuhaidong1/go-generic-tools/cache" />
      <directory value="$PROJECT_DIR$" />
      <filePath value="$PROJECT_DIR$" />
      <framework value="gotest" />
      <pattern value="^\QTestRedisCache_Set\E$/^\Qtimeout\E$" />
      <method v="2" />
    </configuration>
    <configuration name="github.com/xuhaidong1/go-generic-tools/container/queue 中的 TestDelayQueue_Dequeue" type="GoTestRunConfiguration" factoryName="Go Test" temporary="true" nameIsGenerated="true">
      <module name="go-generic-tools" />
      <working_directory value="$PROJECT_DIR$/container/queue" />
      <root_directory value="$PROJECT_DIR$" />
      <kind value="PACKAGE" />
      <package value="github.com/xuhaidong1/go-generic-tools/container/queue" />
      <directory value="$PROJECT_DIR$" />
      <filePath value="$PROJECT_DIR$" />
      <framework value="gotest" />
      <pattern value="^\QTestDelayQueue_Dequeue\E$" />
      <method v="2" />
    </configuration>
    <configuration name="github.com/xuhaidong1/go-generic-tools/container/queue 中的 TestDelayQueue_DequeueInsert" type="GoTestRunConfiguration" factoryName="Go Test" temporary="true" nameIsGenerated="true">
      <module name="go-generic-tools" />
      <working_directory value="$PROJECT_DIR$/container/queue" />
      <root_directory value="$PROJECT_DIR$" />
      <kind value="PACKAGE" />
      <package value="github.com/xuhaidong1/go-generic-tools/container/queue" />
      <directory value="$PROJECT_DIR$" />
      <filePath value="$PROJECT_DIR$" />
      <framework value="gotest" />
      <pattern value="^\QTestDelayQueue_DequeueInsert\E$" />
      <method v="2" />
    </configuration>
    <configuration name="github.com/xuhaidong1/go-generic-tools/container/queue 中的 TestDelayQueue_DequeueTimeout" type="GoTestRunConfiguration" factoryName="Go Test" temporary="true" nameIsGenerated="true">
      <module name="go-generic-tools" />
      <working_directory value="$PROJECT_DIR$/container/queue" />
      <root_directory value="$PROJECT_DIR$" />
      <kind value="PACKAGE" />
      <package value="github.com/xuhaidong1/go-generic-tools/container/queue" />
      <directory value="$PROJECT_DIR$" />
      <filePath value="$PROJECT_DIR$" />
      <framework value="gotest" />
      <pattern value="^\QTestDelayQueue_DequeueTimeout\E$" />
      <method v="2" />
    </configuration>
    <configuration name="github.com/xuhaidong1/go-generic-tools/container/queue 中的 TestDelayQueue_Enqueue" type="GoTestRunConfiguration" factoryName="Go Test" temporary="true" nameIsGenerated="true">
      <module name="go-generic-tools" />
      <working_directory value="$PROJECT_DIR$/container/queue" />
      <root_directory value="$PROJECT_DIR$" />
      <kind value="PACKAGE" />
      <package value="github.com/xuhaidong1/go-generic-tools/container/queue" />
      <directory value="$PROJECT_DIR$" />
      <filePath value="$PROJECT_DIR$" />
      <framework value="gotest" />
      <pattern value="^\QTestDelayQueue_Enqueue\E$" />
      <method v="2" />
    </configuration>
    <recent_temporary>
      <list>
        <item itemvalue="Go 测试.github.com/xuhaidong1/go-generic-tools/cache 中的 TestRedisCache_Set/timeout" />
        <item itemvalue="Go 测试.github.com/xuhaidong1/go-generic-tools/container/queue 中的 TestDelayQueue_DequeueTimeout" />
        <item itemvalue="Go 测试.github.com/xuhaidong1/go-generic-tools/container/queue 中的 TestDelayQueue_DequeueInsert" />
        <item itemvalue="Go 测试.github.com/xuhaidong1/go-generic-tools/container/queue 中的 TestDelayQueue_Dequeue" />
        <item itemvalue="Go 测试.github.com/xuhaidong1/go-generic-tools/container/queue 中的 TestDelayQueue_Enqueue" />
      </list>
    </recent_temporary>
  </component>
  <component name="SpellCheckerSettings" RuntimeDictionaries="0" Folders="0" CustomDictionaries="0" DefaultDictionary="应用程序级" UseSingleDictionary="true" transferred="true" />
  <component name="TypeScriptGeneratedFilesManager">
    <option name="version" value="3" />
  </component>
  <component name="Vcs.Log.Tabs.Properties">
    <option name="TAB_STATES">
      <map>
        <entry key="MAIN">
          <value>
            <State />
          </value>
        </entry>
      </map>
    </option>
  </component>
  <component name="VgoProject">
    <settings-migrated>true</settings-migrated>
  </component>
  <component name="com.intellij.coverage.CoverageDataManagerImpl">
    <SUITE FILE_PATH="coverage/go_generic_tools$go_test_github_com_xuhaidong1_go_generic_tools_container_slice.out" NAME="go test github.com/xuhaidong1/go-generic-tools/container/slice 覆盖结果" MODIFIED="1690878433261" SOURCE_PROVIDER="com.intellij.coverage.DefaultCoverageFileProvider" RUNNER="GoCoverage" COVERAGE_BY_TEST_ENABLED="false" COVERAGE_TRACING_ENABLED="false" />
    <SUITE FILE_PATH="coverage/go_generic_tools$github_com_xuhaidong1_go_generic_tools_container_queue__TestDelayQueue_DequeueTimeout.out" NAME="github.com/xuhaidong1/go-generic-tools/container/queue 中的 TestDelayQueue_DequeueTimeout 覆盖结果" MODIFIED="1692216807952" SOURCE_PROVIDER="com.intellij.coverage.DefaultCoverageFileProvider" RUNNER="GoCoverage" COVERAGE_BY_TEST_ENABLED="false" COVERAGE_TRACING_ENABLED="false" />
    <SUITE FILE_PATH="coverage/go_generic_tools$github_com_xuhaidong1_go_generic_tools_container_queue__TestDelayQueue_DequeueInsert.out" NAME="github.com/xuhaidong1/go-generic-tools/container/queue 中的 TestDelayQueue_DequeueInsert 覆盖结果" MODIFIED="1692210889363" SOURCE_PROVIDER="com.intellij.coverage.DefaultCoverageFileProvider" RUNNER="GoCoverage" COVERAGE_BY_TEST_ENABLED="false" COVERAGE_TRACING_ENABLED="false" />
  </component>
</project>